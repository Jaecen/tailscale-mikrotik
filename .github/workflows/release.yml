name: Release

on:
  release:
    types: [created]

env:
  TAILSCALE_VERSION: 1.78.1

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - linux/arm/v7

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Clone Tailscale repository
        run: git -c advice.detachedHead=false clone https://github.com/tailscale/tailscale.git --branch v${{ env.TAILSCALE_VERSION }}

      - name: Get Tailscale version variables
        id: tailscale_vars
        run: |
          cd tailscale
          TS_USE_TOOLCHAIN="Y"
          eval $(./build_dist.sh shellvars)
          echo "VERSION_LONG=${VERSION_LONG}" >> $GITHUB_OUTPUT
          echo "VERSION_SHORT=${VERSION_SHORT}" >> $GITHUB_OUTPUT
          echo "VERSION_GIT_HASH=${VERSION_GIT_HASH}" >> $GITHUB_OUTPUT
          cd ..

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            TAILSCALE_VERSION=${{ env.TAILSCALE_VERSION }}
            VERSION_LONG=${{ steps.tailscale_vars.outputs.VERSION_LONG }}
            VERSION_SHORT=${{ steps.tailscale_vars.outputs.VERSION_SHORT }}
            VERSION_GIT_HASH=${{ steps.tailscale_vars.outputs.VERSION_GIT_HASH }}
